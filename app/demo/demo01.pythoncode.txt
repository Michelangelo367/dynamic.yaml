### <beg-file_info>
### main:
###   - date: created="Mon Oct 03 09:00:22 2016"
###     last: lastmod="Mon Oct 03 09:00:22 2016"
###     tags: tags
###     dmid: "darer_cloth_beaver"
###     filetype: "yaml"
###     desc: |
###         * see what kinds of python code can be run from within jinja2
###         * use the 'noop variable assignment' trick to run python code
###             * this trick requires zero dependency on the return result of the python code
###     seealso: |
###         * __seealso__
### <end-file_info>
### insmm find="__dmid__"

overview_info:
    caption: LEARNBIT PSRAP ;; caption
    rectype: 			rrlearnbit
    date:       	Mon Oct 03 09:00:53 2016
    context:    	jinja2 and python
    problem:    	Sometimes Trevor wants to run python from within jinja for some minor processing
    solution:   	__solution__
    rationale:  	__rationale__
    example:    	__example__
    pitfalls:   	Trevor will get complaints if he goes to far, pursuant to the "do not mix template and business logic" maxim.
    seealso:   	  __seealso__
    tags:   	    __tags__
    dreftymacid: 	mucks_obtainer_inducing
    wwbody: |

main:
  
  - caption:  zerro
    rectype:  rrmini05
    date: Mon Oct 03 09:00:50 2016

  - caption:  delta
    rectype:  rrmini05
    date: Mon Oct 03 09:00:54 2016
      
  - caption:  alpha
    rectype:  rrmini05
    date: Mon Oct 03 09:00:51 2016
      
  - caption:  bravo
    rectype:  rrmini05
    date: Mon Oct 03 09:00:52 2016
      
  - caption:  charl
    rectype:  rrmini05
    date: Mon Oct 03 09:00:53 2016

__yaml__:


  - &uuid01rrmy02
    caption:      
    processthis:  1
    desc: | 
      * steps for converting date format and sorting on the newly converted value
    uuid: uuid01rrmy02
    template:         |
      {#- ------------------------------------------------------------------------
      refactor table: fieldadd unix date
      -#} 
      {%- set ttarytest = []  -%}
      {% for row in main -%}
        {%- set noop = row.update({'newdate':row.date|jjdate_reformat('%a %b %d %H:%M:%S %Y')}) -%}              
        {%- set noop = ttarytest.append(row)  -%}   
      {% endfor %}
      
      {#- ------------------------------------------------------------------------
      output sort based on newly computed field
      -#} 
      {% for row in ttarytest |sort(reverse=false,attribute='newdate') %}
        {{ row }}
      {% endfor %}    

  - &uuid01rrmy01
    caption:      try array append simple
    processthis:  0
    uuid: uuid01rrmy01
    template:         |
      {%- set ttarytest = [1,2,3,4]  -%}
      {% for row in main -%}
      {%- set noop = ttarytest.append(5)  -%}      
      {% endfor %}
      {{ ttarytest }}
      
      
      