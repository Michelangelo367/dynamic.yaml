### <beg-file_info>
### main:
###   - date: created="Tue Feb 16 16:17:22 2016"
###     last: lastmod="Tue Feb 16 16:17:22 2016"
###     tags: multipass, ddyaml,
###     dreftymacid: "viremic_marksmen_kyle"
###     filetype: "yaml"
###     seealso: |
###         * href="smartpath://mymedia/2014/git/github/dynamic.yaml/app/demo/demo.2passprocessing.txt.twig"
###     desc: |
###         demo with yamldata inside the same file
### <end-file_info>

maininfo: &uuid001
    alpha_one:  "one"
    alpha_two:  "two"
    alpha_tre:  "tre"
    alpha_all:  "{{ '%s-%s-%s' % (maininfo.alpha_one,maininfo.alpha_two,maininfo.alpha_tre) }}"
    alpha_rev:  "{{ ('%s-%s-%s' % (maininfo.alpha_one,maininfo.alpha_two,maininfo.alpha_tre)) |reverse() }}"
        ## NOTE ;; the extra parens are necessary here to prevent the error
        ## yaml possibly_broken_syntax? ) msg@AttributeError("'NoneType' object has no attribute 'pop'",)

projecttable: &uuid002
    - caption:  row000
      <<: *uuid001
      wwbody: |
        {{maininfo.alpha_one}}

    - caption:  row001
      <<: *uuid001
      wwbody: |
        {{maininfo.alpha_two}}

    - caption:  row002
      <<: *uuid001
      wwbody: |
        {{maininfo.alpha_tre}}

## LEARNBIT ;; pumping_grails_chap ;; if you want to get multipass processing to work predictably in ddyaml
##    make sure you do not use second_degree cross references anywhere in
##    your firstpass template.
##
##    A second_degree crossreference is where the placeholder in YAML refers to
##    one or more non-hard-coded values elsewhere in other placeholders.
##    The example below demonstrates this
##    The difference between using
##
##        << maininfo.alpha_all >>
##
##    versus
##
##        << '%s-%s-%s' % (maininfo.alpha_one,maininfo.alpha_two,maininfo.alpha_tre) >>
##;;

    - caption:  row002
      <<: *uuid001
      wwbody: |
        {{maininfo.alpha_all}} <-- [this wont work as expected]
        
        [this one will work as expected]
              |
              |
              v
        "{{ '%s-%s-%s' % (maininfo.alpha_one,maininfo.alpha_two,maininfo.alpha_tre) }}"

        
        
__yaml__:

  - &uudXVsZWFuX2JvdG
    caption:          demo multipass data transform with templateinclude
    processthis:      1
    uuid:             uudXVsZWFuX2JvdG
    template: |
      ### ------------------------------------------------------------------------
      ### maininfo
      {{ maininfo }}

      ### ------------------------------------------------------------------------
      ### dataloop
      {% for row in projecttable -%}
      {{ row |jjdata_formatas('yamlpretty') }}
      {% endfor %}

###   when run like this, ddyaml does not interpolate all the content
###   the maininfo section does, however appear to get completely interpolated
###
#@@   ### ------------------------------------------------------------------------
#@@   ### maininfo
#@@   {'alpha_one': 'one', 'alpha_all': 'onetwotre', 'alpha_tre': 'tre', 'alpha_two': 'two'}
#@@
#@@   ### ------------------------------------------------------------------------
#@@   ### projectinfo
#@@   {{maininfo.alpha_one}}{{maininfo.alpha_two}}{{maininfo.alpha_tre}}
#@@
#@@   ### ------------------------------------------------------------------------
#@@   ### dataloop
#@@   {{maininfo.alpha_one}}{{maininfo.alpha_two}}{{maininfo.alpha_tre}}
#@@
#@@   {{maininfo.alpha_one}}{{maininfo.alpha_two}}{{maininfo.alpha_tre}}
#@@
#@@   {{maininfo.alpha_one}}{{maininfo.alpha_two}}{{maininfo.alpha_tre}}

